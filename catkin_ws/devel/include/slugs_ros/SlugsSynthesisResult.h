// Generated by gencpp from file slugs_ros/SlugsSynthesisResult.msg
// DO NOT EDIT!


#ifndef SLUGS_ROS_MESSAGE_SLUGSSYNTHESISRESULT_H
#define SLUGS_ROS_MESSAGE_SLUGSSYNTHESISRESULT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace slugs_ros
{
template <class ContainerAllocator>
struct SlugsSynthesisResult_
{
  typedef SlugsSynthesisResult_<ContainerAllocator> Type;

  SlugsSynthesisResult_()
    : realizable(false)
    , synthesis_time(0.0)
    , output_message()  {
    }
  SlugsSynthesisResult_(const ContainerAllocator& _alloc)
    : realizable(false)
    , synthesis_time(0.0)
    , output_message(_alloc)  {
    }



   typedef uint8_t _realizable_type;
  _realizable_type realizable;

   typedef double _synthesis_time_type;
  _synthesis_time_type synthesis_time;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _output_message_type;
  _output_message_type output_message;




  typedef boost::shared_ptr< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> const> ConstPtr;

}; // struct SlugsSynthesisResult_

typedef ::slugs_ros::SlugsSynthesisResult_<std::allocator<void> > SlugsSynthesisResult;

typedef boost::shared_ptr< ::slugs_ros::SlugsSynthesisResult > SlugsSynthesisResultPtr;
typedef boost::shared_ptr< ::slugs_ros::SlugsSynthesisResult const> SlugsSynthesisResultConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace slugs_ros

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'slugs_ros': ['/home/kchaudhari/catkin_ws/src/LTL_stack/slugs_ros/msg', '/home/kchaudhari/catkin_ws/devel/share/slugs_ros/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "34e38da21dad06046624bf2e5222d34a";
  }

  static const char* value(const ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x34e38da21dad0604ULL;
  static const uint64_t static_value2 = 0x6624bf2e5222d34aULL;
};

template<class ContainerAllocator>
struct DataType< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "slugs_ros/SlugsSynthesisResult";
  }

  static const char* value(const ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
# outputs\n\
bool realizable\n\
float64 synthesis_time\n\
string output_message\n\
";
  }

  static const char* value(const ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.realizable);
      stream.next(m.synthesis_time);
      stream.next(m.output_message);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER;
  }; // struct SlugsSynthesisResult_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::slugs_ros::SlugsSynthesisResult_<ContainerAllocator>& v)
  {
    s << indent << "realizable: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.realizable);
    s << indent << "synthesis_time: ";
    Printer<double>::stream(s, indent + "  ", v.synthesis_time);
    s << indent << "output_message: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.output_message);
  }
};

} // namespace message_operations
} // namespace ros

#endif // SLUGS_ROS_MESSAGE_SLUGSSYNTHESISRESULT_H
